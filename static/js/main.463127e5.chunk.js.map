{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","good","name","id","color","style","getAll","fetch","then","response","ok","json","Promise","reject","Error","statusText","catch","error","Sort","getButtonName","sortType","All","FirstFive","Red","App","useState","setGoods","sort","setSort","getGoods","useCallback","promise","a","handleClick","b","localeCompare","slice","filter","className","Object","values","current","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"8PAOaA,EAA6BC,IAAMC,MAC9C,YAAgB,IAAbC,EAAY,EAAZA,MACD,OACE,6BACGA,EAAMC,KAAI,SAAAC,GACT,IAAQC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,GAAIC,EAAUH,EAAVG,MAElB,OACE,oBAEE,UAAQ,OACRC,MAAO,CAAED,SAHX,SAKGF,GAJIC,WCXZ,SAASG,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,OAAKA,EAASC,GAMPD,EAASE,OALPC,QAAQC,OACb,IAAIC,MAAML,EAASM,gBAMxBC,OAAM,SAAAC,GAAK,OAAI,IAAIH,MAAMG,MAGvB,ICZFC,G,SAAAA,K,iBAAAA,E,8BAAAA,E,kBAAAA,M,KAML,IAAMC,EAAgB,SAACC,GACrB,OAAQA,GACN,KAAKF,EAAKG,IACR,MAAO,iBAET,KAAKH,EAAKI,UACR,MAAO,qBAET,KAAKJ,EAAKK,IACR,MAAO,iBAET,QACE,MAAO,KAIAC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAO1B,EAAP,KAAc2B,EAAd,KACA,EAAwBD,qBAAxB,mBAAOE,EAAP,KAAaC,EAAb,KAEMC,EAAWC,sBAAW,uCAAC,WAAOC,GAAP,SAAAC,EAAA,kEAC3BN,EAD2B,SACZK,EADY,6EAAD,sDAEzB,IAEGE,EAAcH,uBAAY,SAACV,GAC/B,GAAIO,IAASP,EAIb,OAAQA,GACN,KAAKF,EAAKG,IACRO,EAAQV,EAAKG,KACbQ,EAASvB,KACT,MAEF,KAAKY,EAAKI,UACRM,EAAQV,EAAKG,KACbQ,ED9BCvB,IACJE,MAAK,SAAAT,GAAK,OAAIA,EACZ4B,MAAK,SAACK,EAAGE,GAAJ,OAAUF,EAAE9B,KAAKiC,cAAcD,EAAEhC,SACtCkC,MAAM,EAAG,OC4BR,MAEF,KAAKlB,EAAKK,IACRK,EAAQV,EAAKK,KACbM,ED5BCvB,IACJE,MAAK,SAAAT,GAAK,OAAIA,EAAMsC,QAAO,SAAApC,GAAI,MAAmB,QAAfA,EAAKG,gBCiCxC,IAEH,OACE,sBAAKkC,UAAU,MAAf,UACE,uDAECC,OAAOC,OAAOtB,GAAMlB,KAAI,SAAAyC,GAAO,OAC9B,wBACEC,KAAK,SACL,UAASD,EACTE,QAAS,WACPV,EAAYQ,IAJhB,SAOGtB,EAAcsB,QAInB,cAAC7C,EAAD,CAAWG,MAAOA,QC5ExB6C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.463127e5.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(\n  ({ goods }) => {\n    return (\n      <ul>\n        {goods.map(good => {\n          const { name, id, color } = good;\n\n          return (\n            <li\n              key={id}\n              data-cy=\"good\"\n              style={{ color }}\n            >\n              {name}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  },\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(response.statusText),\n        );\n      }\n\n      return response.json();\n    })\n    .catch(error => new Error(error));\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useCallback, useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nenum Sort {\n  All = 'all-button',\n  FirstFive = 'first-five-button',\n  Red = 'red-button',\n}\n\nconst getButtonName = (sortType: Sort) => {\n  switch (sortType) {\n    case Sort.All:\n      return 'Load all goods';\n\n    case Sort.FirstFive:\n      return 'Load 5 first goods';\n\n    case Sort.Red:\n      return 'Load red goods';\n\n    default:\n      return '';\n  }\n};\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [sort, setSort] = useState<Sort>();\n\n  const getGoods = useCallback(async (promise: Promise<Good[]>) => {\n    setGoods(await promise);\n  }, []);\n\n  const handleClick = useCallback((sortType: Sort) => {\n    if (sort === sortType) {\n      return;\n    }\n\n    switch (sortType) {\n      case Sort.All:\n        setSort(Sort.All);\n        getGoods(getAll());\n        break;\n\n      case Sort.FirstFive:\n        setSort(Sort.All);\n        getGoods(get5First());\n        break;\n\n      case Sort.Red:\n        setSort(Sort.Red);\n        getGoods(getRedGoods());\n        break;\n\n      default:\n        break;\n    }\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      {Object.values(Sort).map(current => (\n        <button\n          type=\"button\"\n          data-cy={current}\n          onClick={() => {\n            handleClick(current);\n          }}\n        >\n          {getButtonName(current)}\n        </button>\n      ))}\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}