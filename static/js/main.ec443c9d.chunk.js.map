{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","React","memo","goods","map","good","name","id","color","style","getAll","fetch","then","response","ok","json","Promise","reject","Error","statusText","catch","error","Sort","App","useState","setGoods","sort","setSort","handleClick","promise","a","className","type","onClick","All","FirstFive","b","localeCompare","slice","Red","filter","ReactDOM","render","document","getElementById"],"mappings":"8PAOaA,EAA6BC,IAAMC,MAC9C,YAAgB,IAAbC,EAAY,EAAZA,MACD,OACE,6BACGA,EAAMC,KAAI,SAAAC,GACT,IAAQC,EAAoBD,EAApBC,KAAMC,EAAcF,EAAdE,GAAIC,EAAUH,EAAVG,MAElB,OACE,oBAEE,UAAQ,OACRC,MAAO,CAAED,SAHX,SAKGF,GAJIC,WCXZ,SAASG,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GACJ,OAAKA,EAASC,GAMPD,EAASE,OALPC,QAAQC,OACb,IAAIC,MAAML,EAASM,gBAMxBC,OAAM,SAAAC,GAAK,OAAI,IAAIH,MAAMG,MAGvB,ICZFC,G,SAAAA,O,aAAAA,I,yBAAAA,I,cAAAA,M,KAME,IAAMC,EAAgB,WAC3B,MAA0BC,mBAAiB,IAA3C,mBAAOrB,EAAP,KAAcsB,EAAd,KACA,EAAwBD,qBAAxB,mBAAOE,EAAP,KAAaC,EAAb,KAEMC,EAAW,uCAAG,WAAOC,GAAP,SAAAC,EAAA,kEAClBL,EADkB,SACHI,EADG,6EAAH,sDAIjB,OACE,sBAAKE,UAAU,MAAf,UACE,uDAEA,wBACEC,KAAK,SACL,UAAQ,aACRC,QAAS,WACHP,IAASJ,EAAKY,MAChBP,EAAQL,EAAKY,KACbN,EAAYlB,OANlB,4BAaA,wBACEsB,KAAK,SACL,UAAQ,oBACRC,QAAS,WACHP,IAASJ,EAAKa,YAChBR,EAAQL,EAAKa,WACbP,EDxBHlB,IACJE,MAAK,SAAAT,GAAK,OAAIA,KACdS,MAAK,SAAAT,GAAK,OAAIA,EACZuB,MAAK,SAACI,EAAGM,GAAJ,OAAUN,EAAExB,KAAK+B,cAAcD,EAAE9B,SACtCgC,MAAM,EAAG,SCcV,gCAaA,wBACEN,KAAK,SACL,UAAQ,aACRC,QAAS,WACHP,IAASJ,EAAKiB,MAChBZ,EAAQL,EAAKiB,KACbX,ED7BHlB,IACJE,MAAK,SAAAT,GAAK,OAAIA,KACdS,MAAK,SAAAT,GAAK,OAAIA,EAAMqC,QAAO,SAAAnC,GAAI,MAAmB,QAAfA,EAAKG,eCqBvC,4BAaA,cAACR,EAAD,CAAWG,MAAOA,QC7DxBsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ec443c9d.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = React.memo(\n  ({ goods }) => {\n    return (\n      <ul>\n        {goods.map(good => {\n          const { name, id, color } = good;\n\n          return (\n            <li\n              key={id}\n              data-cy=\"good\"\n              style={{ color }}\n            >\n              {name}\n            </li>\n          );\n        })}\n      </ul>\n    );\n  },\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(response.statusText),\n        );\n      }\n\n      return response.json();\n    })\n    .catch(error => new Error(error));\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods)\n    .then(goods => goods\n      .sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods)\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\nimport { Good } from './types/Good';\n\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nenum Sort {\n  All,\n  FirstFive,\n  Red,\n}\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n  const [sort, setSort] = useState<Sort>();\n\n  const handleClick = async (promise: Promise<Good[]>) => {\n    setGoods(await promise);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => {\n          if (sort !== Sort.All) {\n            setSort(Sort.All);\n            handleClick(getAll());\n          }\n        }}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => {\n          if (sort !== Sort.FirstFive) {\n            setSort(Sort.FirstFive);\n            handleClick(get5First());\n          }\n        }}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => {\n          if (sort !== Sort.Red) {\n            setSort(Sort.Red);\n            handleClick(getRedGoods());\n          }\n        }}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}